services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=trading_user
      - POSTGRES_PASSWORD=a_secure_password
      - POSTGRES_DB=crypto_trading_db
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./db-backup:/db-backups
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_user -d crypto_trading_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  initial-backfill:
    build:
      context: .
      dockerfile: ingestor.Dockerfile
    command: python trading_system/data_ingestion.py --mode backfill
    environment:
      - DB_USER=trading_user
      - DB_PASSWORD=a_secure_password
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=crypto_trading_db
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  trader:
    build:
      context: .
      dockerfile: trader.Dockerfile
    restart: always
    command: python trading_system/trader.py
    environment:
      # --- For Database Connection ---
      - DB_USER=trading_user
      - DB_PASSWORD=a_secure_password
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=crypto_trading_db
    volumes:
      # Mount the entire project directory into the container's /app folder
      - .:/app
    depends_on:
      initial-backfill:
        condition: service_completed_successfully
    env_file:
      - .env

  live-ingestor:
    build:
      context: .
      dockerfile: ingestor.Dockerfile
    restart: always
    command: python trading_system/data_ingestion.py --mode sync
    environment:
      # --- For Database Connection ---
      - DB_USER=trading_user
      - DB_PASSWORD=a_secure_password
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=crypto_trading_db
    volumes:
      - .:/app
    depends_on:
      initial-backfill:
        condition: service_completed_successfully
    env_file:
      - .env

  backtester:
    build:
      context: .
      dockerfile: backtester.Dockerfile
    command: ["python", "trading_system/backtest.py"]
    environment:
      - DB_USER=trading_user
      - DB_PASSWORD=a_secure_password
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=crypto_trading_db
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env